#!/usr/bin/python3
#
# Copyright 2018 ScyllaDB
#

#
# This file is part of Scylla.
#
# Scylla is free software: you can redistribute it and/or modify
# it under the terms of the GNU Affero General Public License as published by
# the Free Software Foundation, either version 3 of the License, or
# (at your option) any later version.
#
# Scylla is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with Scylla.  If not, see <http://www.gnu.org/licenses/>.

import os
import sys
import argparse
from scylla_util import *

def get_en_interface_type():
    type, subtype = curl('http://169.254.169.254/latest/meta-data/instance-type').split('.')
    if type in ['c3', 'c4', 'd2', 'i2', 'r3']:
        return 'ixgbevf'
    if type in ['c5', 'c5d', 'f1', 'g3', 'h1', 'i3', 'm5', 'm5d', 'p2', 'p3', 'r4', 'x1']:
        return 'ena'
    if type == 'm4':
        if subtype == '16xlarge':
            return 'ena'
        else:
            return 'ixgbevf'

def is_vpc_enabled():
    with open('/sys/class/net/eth0/address') as f:
        mac = f.read().strip()
    mac_stat = curl('http://169.254.169.254/latest/meta-data/network/interfaces/macs/{}/'.format(mac))
    return True if re.search(r'^vpc-id$', mac_stat, flags=re.MULTILINE) else False


if __name__ == '__main__':
    if not is_ec2():
        sys.exit(0)

    type = curl('http://169.254.169.254/latest/meta-data/instance-type')
    en = get_en_interface_type()
    match = re.search(r'^driver: (\S+)$', out('ethtool -i eth0'), flags=re.MULTILINE)
    driver = match.group(1)

    if not en:
        print('{bold_red}{type} doesn\'t support enahanced networking!{no_color}'.format(bold_red=concolor.BOLD_RED, type=type, no_color=concolor.NO_COLOR))
        print('''To enable enhanced networking, please use the instance type which supports it.
More documentation available at:
http://docs.aws.amazon.com/AWSEC2/latest/UserGuide/enhanced-networking.html#enabling_enhanced_networking''')
        sys.exit(1)
    elif not is_vpc_enabled():
        print('{bold_red}VPC is not enabled!{no_color}'.format(bold_red=concolor.BOLD_RED, no_color=concolor.NO_COLOR))
        print('To enable enhanced networking, please enable VPC.')
        sys.exit(1)
    elif driver != en:
        print('{bold_red}Enhanced networking is disabled!{no_color}'.format(bold_red=concolor.BOLD_RED, no_color=concolor.NO_COLOR))
        print('''More documentation available at:
http://docs.aws.amazon.com/AWSEC2/latest/UserGuide/enhanced-networking.html''')
        sys.exit(1)

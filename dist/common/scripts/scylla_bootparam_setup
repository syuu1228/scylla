#!/usr/bin/python2
#
# Copyright 2018 ScyllaDB
#

#
# This file is part of Scylla.
#
# Scylla is free software: you can redistribute it and/or modify
# it under the terms of the GNU Affero General Public License as published by
# the Free Software Foundation, either version 3 of the License, or
# (at your option) any later version.
#
# Scylla is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with Scylla.  If not, see <http://www.gnu.org/licenses/>.

import os
import re
import sys
import argparse
import subprocess
import logging
import distro
from scylla_util import is_debian_variant

if __name__ == '__main__':
    if os.getuid() > 0:
        logging.error('Requires root permission.')
        sys.exit(1)
    parser = argparse.ArgumentParser(description='Optimize boot parameter settings for Scylla.')
    parser.add_argument('--ami', action='store_true', default=False,
                        help='setup AMI instance')
    args = parser.parse_args()

    if not args.ami:
        sys.exit(0)
    if not os.path.exists('/etc/default/grub') and not os.path.exists('/boot/grub/menu.lst'):
        logging.error('Unsupported bootloader')
        sys.exit(1)

    if os.path.exists('/etc/default/grub'):
        f = open('/etc/default/grub')
        cur = f.read()
        f.close()
        if len(re.findall(r'^GRUB_CMDLINE_LINUX=.*clocksource', cur, flags=re.MULTILINE)) == 0:
            new = re.sub(r'^GRUB_CMDLINE_LINUX=(.*)$', 'GRUB_CMDLINE='clocksource=tsc tsc=reliable '', cur, flags=re.MULTILINE)
            f = open('/etc/default/grub', 'w')
            f.write(new)
            f.close()
            if is_debian_variant():
                subprocess.check_call(['update-grub'])
            else:
                subprocess.check_call(['grub2-mkconfig', '-o', '/boot/grub2/grub.cfg'])

    if is_ec2() and os.path.exists('/boot/grub/menu.lst'):
        f = open('/boot/grub/menu.lst')
        cur = f.read()
        f.close()
        if len(re.findall(r'^\s*kernel.*clocksource', cur, flags=re.MULTILINE)) == 0:
            new = re.sub(r'(^\s*kernel.*)', r'\1 clocksource=tsc tsc=reliable ', cur, flags=re.MULTILINE)
            f = open('/boot/grub/menu.lst', 'w')
            f.write(new)
            f.close()
